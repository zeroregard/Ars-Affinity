plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0+'
}

base {
    version = "${minecraft_version}-${mod_version}"
    group = 'com.github.arsaffinity'
    archivesBaseName = 'ars_affinity'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
java.withSourcesJar()

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_version
        minecraftVersion = "1.21"
    }

    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

repositories {
    mavenCentral()
    maven { url = "https://maven.neoforged.net/releases" }
    maven { url = "https://maven.saps.dev/releases" }
    maven { url = "https://maven.saps.dev/snapshots" }
    mavenLocal()
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.minecraftforge.net" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/" }
    maven { url = "https://jitpack.io" }
    
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    implementation("com.hollingsworth.ars_nouveau:ars_nouveau-${minecraft_version}:${ars_version}")
    
    runtimeOnly("software.bernie.geckolib:geckolib-neoforge-${minecraft_version}:${geckolib_version}")
    runtimeOnly("vazkii.patchouli:Patchouli:1.21-${patchouli_version}")
    runtimeOnly("top.theillusivec4.curios:curios-neoforge:${curios_version}")
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        register('maven', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
} 